import { SvelteComponent } from "svelte";
import type { FileRouter } from "uploadthing/server";
import type { UploadthingComponentProps } from "../types";
declare class __sveltets_Render<TRouter extends FileRouter, TEndpoint extends keyof TRouter> {
    props(): {
        uploader: UploadthingComponentProps<TRouter, TEndpoint>;
    };
    events(): {} & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {};
}
export type UploaderProps<TRouter extends FileRouter, TEndpoint extends keyof TRouter> = ReturnType<__sveltets_Render<TRouter, TEndpoint>['props']>;
export type UploaderEvents<TRouter extends FileRouter, TEndpoint extends keyof TRouter> = ReturnType<__sveltets_Render<TRouter, TEndpoint>['events']>;
export type UploaderSlots<TRouter extends FileRouter, TEndpoint extends keyof TRouter> = ReturnType<__sveltets_Render<TRouter, TEndpoint>['slots']>;
export default class Uploader<TRouter extends FileRouter, TEndpoint extends keyof TRouter> extends SvelteComponent<UploaderProps<TRouter, TEndpoint>, UploaderEvents<TRouter, TEndpoint>, UploaderSlots<TRouter, TEndpoint>> {
}
export {};
