import type { Action } from "svelte/action";
import type { DropzoneOptions } from "@uploadthing/shared";
export type DropEvent = InputEvent | DragEvent | Event;
export declare function createDropzone(_props: DropzoneOptions): {
    state: {
        readonly subscribe: (this: void, run: import("svelte/store").Subscriber<{
            isFocused: boolean;
            isFileDialogActive: boolean;
            isDragActive: boolean;
            isDragAccept: boolean;
            isDragReject: boolean;
            acceptedFiles: File[];
        }>, invalidate?: import("svelte/store").Invalidator<{
            isFocused: boolean;
            isFileDialogActive: boolean;
            isDragActive: boolean;
            isDragAccept: boolean;
            isDragReject: boolean;
            acceptedFiles: File[];
        }> | undefined) => import("svelte/store").Unsubscriber;
    };
    dropzoneRoot: Action<HTMLElement, undefined, Record<never, any>>;
    dropzoneInput: Action<HTMLInputElement, DropzoneOptions, Record<never, any>>;
    rootRef: import("svelte/store").Writable<HTMLElement | null>;
    inputRef: HTMLInputElement | null;
};
